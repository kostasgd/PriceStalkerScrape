﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace ScrapingConsole
{
    public partial class MLModel1
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"Id", @"Id"),new InputOutputColumnPair(@"Price", @"Price"),new InputOutputColumnPair(@"Rating", @"Rating")})      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"Description", @"Description"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"Link", @"Link"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Id",@"Price",@"Rating",@"Description",@"Link"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(@"Title", @"Title"))      
                                    .Append(mlContext.Transforms.NormalizeMinMax(@"Features", @"Features"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(l1Regularization:1.73332507236423F,l2Regularization:6.56514981049193F,labelColumnName:@"Title",featureColumnName:@"Features"))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(@"PredictedLabel", @"PredictedLabel"));

            return pipeline;
        }
    }
}
